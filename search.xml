<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Springboot+mybatis-plus实现restful风格接口</title>
    <url>/2019/10/10/springboot-mybatis-plus%E5%AE%9E%E7%8E%B0restful%E9%A3%8E%E6%A0%BC%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<p><strong>摘要</strong>：本文将通过Springboot和 <a href="https://mp.baomidou.com" target="_blank" rel="noopener">MyBatis-Plus</a> 的整合实现restful风格接口，使用更强大但不侵入的mybatis-plus,简单满足日常需求，甚至可以达到不写dao层就能实现crud，分页等的效果，由于写博客经验欠缺，可能要点不够详细</p>
<h2 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h2><p>springboot按照通常情况创建工程</p>
<h2 id="MyBatis-Plus"><a href="#MyBatis-Plus" class="headerlink" title="MyBatis-Plus"></a><a href="https://mp.baomidou.com" target="_blank" rel="noopener">MyBatis-Plus</a></h2><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>首先现在pom文件中导入mp等必备的依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">          &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">      &lt;!--mybatis-plus依赖--&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">      &lt;!--mybatis-plus代码生成器--&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">      </span><br><span class="line">  &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>

<h3 id="配置application-xml"><a href="#配置application-xml" class="headerlink" title="配置application.xml"></a>配置application.xml</h3><p>配置数据源，日志打印等常用配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/mp_db?characterEncoding=utf-8</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    jackson:</span><br><span class="line">      date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">      time-zone: GMT+8</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  level:</span><br><span class="line"><span class="comment">#    root: info</span></span><br><span class="line">    com.liu.dao: trace</span><br><span class="line">  pattern:</span><br><span class="line">    console: <span class="string">'%p%m%n'</span></span><br></pre></td></tr></table></figure>

<h3 id="建立实体类"><a href="#建立实体类" class="headerlink" title="建立实体类"></a>建立实体类</h3><p>建立实体类，注解实现映射</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">package com.liu.model;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.annotation.*;</span><br><span class="line">import com.baomidou.mybatisplus.extension.activerecord.Model;</span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">import java.time.LocalDateTime;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">//@TableName(<span class="string">"user"</span>) 注解映射:表名</span><br><span class="line">public class User extends Model&lt;User&gt; &#123;</span><br><span class="line">    //@TableId(<span class="string">"id"</span>) 注解映射:主键</span><br><span class="line">    //@TableId(value = <span class="string">"id"</span>,<span class="built_in">type</span> = IdType.AUTO) //注解映射:主键,并且标注自增</span><br><span class="line">    private Integer id;</span><br><span class="line">    //@TableField(<span class="string">"real_name"</span>) 注解映射:字段</span><br><span class="line">    private String realName;</span><br><span class="line">    private Integer pid;</span><br><span class="line"></span><br><span class="line">    @TableField(fill=FieldFill.INSERT)//insert新增一个记录时自动填充</span><br><span class="line">    private LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    @TableField(fill=FieldFill.UPDATE)//update更新一个记录时自动填充</span><br><span class="line">    private LocalDateTime updateTime;</span><br><span class="line"></span><br><span class="line">    @TableLogic//标注为逻辑删除字段(全局默认0未删除，1已删除)</span><br><span class="line">    @TableField(select = <span class="literal">false</span>)//全局标注为不查询的字段</span><br><span class="line">    private Integer deleted;</span><br><span class="line"></span><br><span class="line">    @TableField(exist = <span class="literal">false</span>) //标注为user表中不存在的字段，但为实体类需求的属性</span><br><span class="line">    protected List&lt;String&gt; list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="dao层通过继承baseMapper（通用mapper），实现对实体类功能强大的基本操作"><a href="#dao层通过继承baseMapper（通用mapper），实现对实体类功能强大的基本操作" class="headerlink" title="dao层通过继承baseMapper（通用mapper），实现对实体类功能强大的基本操作"></a>dao层通过继承baseMapper（通用mapper），实现对实体类功能强大的基本操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Repository</span><br><span class="line">public interface UserMapper extends BaseMapper&lt;User&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使userMapper拥有以下功能强大，全面的方法"><a href="#使userMapper拥有以下功能强大，全面的方法" class="headerlink" title="使userMapper拥有以下功能强大，全面的方法"></a>使userMapper拥有以下功能强大，全面的方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public interface BaseMapper&lt;T&gt; extends Mapper&lt;T&gt; &#123;</span><br><span class="line">    int insert(T entity);</span><br><span class="line"></span><br><span class="line">    int deleteById(Serializable id);</span><br><span class="line"></span><br><span class="line">    int deleteByMap(@Param(<span class="string">"cm"</span>) Map&lt;String, Object&gt; columnMap);</span><br><span class="line"></span><br><span class="line">    int delete(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; wrapper);</span><br><span class="line"></span><br><span class="line">    int deleteBatchIds(@Param(<span class="string">"coll"</span>) Collection&lt;? extends Serializable&gt; idList);</span><br><span class="line"></span><br><span class="line">    int updateById(@Param(<span class="string">"et"</span>) T entity);</span><br><span class="line"></span><br><span class="line">    int update(@Param(<span class="string">"et"</span>) T entity, @Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; updateWrapper);</span><br><span class="line"></span><br><span class="line">    T selectById(Serializable id);</span><br><span class="line"></span><br><span class="line">    List&lt;T&gt; selectBatchIds(@Param(<span class="string">"coll"</span>) Collection&lt;? extends Serializable&gt; idList);</span><br><span class="line"></span><br><span class="line">    List&lt;T&gt; selectByMap(@Param(<span class="string">"cm"</span>) Map&lt;String, Object&gt; columnMap);</span><br><span class="line"></span><br><span class="line">    T selectOne(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    Integer selectCount(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    List&lt;T&gt; selectList(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; selectMaps(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    List&lt;Object&gt; selectObjs(@Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, @Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; page, @Param(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="restful风格"><a href="#restful风格" class="headerlink" title="restful风格"></a>restful风格</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(<span class="string">"/rest"</span>)</span><br><span class="line">public class PeopleController &#123;</span><br><span class="line">    //private final static Logger <span class="built_in">log</span> = LoggerFactory.getLogger(PeopleController.class);</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line"></span><br><span class="line">    @GetMapping(<span class="string">"/people"</span>)</span><br><span class="line">    public AjaxResponse <span class="function"><span class="title">getAll</span></span>()&#123;</span><br><span class="line">        List&lt;User&gt; users = userService.getAll();</span><br><span class="line">        <span class="keyword">if</span> (users!=null)&#123;</span><br><span class="line">            log.info(<span class="string">"查询peoples:"</span>+ users);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(users);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"查询集合peoples失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @GetMapping(<span class="string">"/people/&#123;id&#125;"</span>)</span><br><span class="line">    public AjaxResponse getOne(@PathVariable(<span class="string">"id"</span>) int id)&#123;</span><br><span class="line">        User user =userService.getOne(id);</span><br><span class="line">        <span class="keyword">if</span> (user!=null)&#123;</span><br><span class="line">            log.info(<span class="string">"查询单个people:"</span>+ user);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(user);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"查询people失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @PostMapping(<span class="string">"/people"</span>)</span><br><span class="line">    public AjaxResponse add(@RequestBody User user)&#123;</span><br><span class="line">        int result=userService.add(user);</span><br><span class="line">        <span class="keyword">if</span> (result&gt;0)&#123;</span><br><span class="line">            log.info(<span class="string">"新增people:"</span>+ user);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(user);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"新增people失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @PutMapping(<span class="string">"/people"</span>)</span><br><span class="line">    // (x-www-form-urlencoded)表单提交时，使用public AjaxResponse edit( User user)或@RequestParam绑定参数</span><br><span class="line"></span><br><span class="line">    //使用json提交时使用@RequestBody</span><br><span class="line">    public AjaxResponse edit(@RequestBody User user)&#123;</span><br><span class="line">        int result=userService.update(user);</span><br><span class="line">        log.info(<span class="string">"User"</span>+user);</span><br><span class="line">        log.info(<span class="string">"result"</span>+result);</span><br><span class="line">        <span class="keyword">if</span> (result&gt;0)&#123;</span><br><span class="line">            log.info(<span class="string">"修改people:"</span>+user.getUserId()+<span class="string">":"</span>+ user);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(user);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"修改people:"</span>+user.getUserId()+<span class="string">":失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @DeleteMapping(<span class="string">"/people/&#123;id&#125;"</span>)</span><br><span class="line">    public AjaxResponse delete(@PathVariable(<span class="string">"id"</span>)int id)&#123;</span><br><span class="line">        int result=userService.delete(id);</span><br><span class="line">        <span class="keyword">if</span> (result&gt;0)&#123;</span><br><span class="line">            log.info(<span class="string">"删除people:"</span>+id);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(id);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            log.info(<span class="string">"删除people:失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //根据条件删除，deleteByExample(String userName)</span><br><span class="line">    @DeleteMapping(<span class="string">"/people/bynamedelete/&#123;name&#125;"</span>)</span><br><span class="line">    public AjaxResponse deleteByExample(@PathVariable(<span class="string">"name"</span>) String userName)&#123;</span><br><span class="line">        int result=userService.deleteByExample(userName);</span><br><span class="line">        <span class="keyword">if</span> (result&gt;0)&#123;</span><br><span class="line">            log.info(<span class="string">"删除people:"</span>+userName);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.success(userName);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            log.info(<span class="string">"删除people:失败"</span>);</span><br><span class="line">            <span class="built_in">return</span> AjaxResponse.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @RequestMapping(<span class="string">"/text"</span>)</span><br><span class="line">    public String <span class="function"><span class="title">text</span></span>()&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"hello,Text~...."</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>1.mybatis-plus提供了功能强大的Wrapper，可实现多重复杂的条件查询<br>2.可以实现数据库层的物理分页查询<br>3.同时拥有通用service，不写dao层代码就实现对实体类基本常用的操作<br>具体方法文档请浏览 <a href="https://mp.baomidou.com" target="_blank" rel="noopener">MyBatis-Plus官网</a></p>
</blockquote>
]]></content>
      <categories>
        <category>后端技术</category>
      </categories>
      <tags>
        <tag>springboot</tag>
        <tag>mybatis-plus</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2019/10/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="我的博客"><a href="#我的博客" class="headerlink" title="我的博客"></a>我的博客</h2><p>这是我的博客，会记录一些博客内容，同时也会记录一些生活点滴.</p>
<h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>学习中，会记录一些知识要点，我的<a href="https://github.com/ly-xuan" target="_blank" rel="noopener">Github</a></p>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2>]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活记录</tag>
      </tags>
  </entry>
</search>
